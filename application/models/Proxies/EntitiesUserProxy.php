<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesUserProxy extends \Entities\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setProfileId($profileId)
    {
        $this->_load();
        return parent::setProfileId($profileId);
    }

    public function getProfileId()
    {
        $this->_load();
        return parent::getProfileId();
    }

    public function setPassword($password)
    {
        $this->_load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->_load();
        return parent::getPassword();
    }

    public function setFirstName($firstName)
    {
        $this->_load();
        return parent::setFirstName($firstName);
    }

    public function getFirstName()
    {
        $this->_load();
        return parent::getFirstName();
    }

    public function setLastName($lastName)
    {
        $this->_load();
        return parent::setLastName($lastName);
    }

    public function getLastName()
    {
        $this->_load();
        return parent::getLastName();
    }

    public function setRole($role)
    {
        $this->_load();
        return parent::setRole($role);
    }

    public function getRole()
    {
        $this->_load();
        return parent::getRole();
    }

    public function setEmail($email)
    {
        $this->_load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->_load();
        return parent::getEmail();
    }

    public function setCreated($created)
    {
        $this->_load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->_load();
        return parent::getCreated();
    }

    public function setLastLogin($lastLogin)
    {
        $this->_load();
        return parent::setLastLogin($lastLogin);
    }

    public function getLastLogin()
    {
        $this->_load();
        return parent::getLastLogin();
    }

    public function setIp($ip)
    {
        $this->_load();
        return parent::setIp($ip);
    }

    public function getIp()
    {
        $this->_load();
        return parent::getIp();
    }

    public function setLongtitude($longtitude)
    {
        $this->_load();
        return parent::setLongtitude($longtitude);
    }

    public function getLongtitude()
    {
        $this->_load();
        return parent::getLongtitude();
    }

    public function setLatitude($latitude)
    {
        $this->_load();
        return parent::setLatitude($latitude);
    }

    public function getLatitude()
    {
        $this->_load();
        return parent::getLatitude();
    }

    public function setProfile(\Entities\UserProfile $profile)
    {
        $this->_load();
        return parent::setProfile($profile);
    }

    public function getProfile()
    {
        $this->_load();
        return parent::getProfile();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'profile_id', 'password', 'firstName', 'lastName', 'role', 'email', 'created', 'last_login', 'ip', 'longtitude', 'latitude', 'profile');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}